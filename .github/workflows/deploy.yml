name: "Deploy"
on:
  push:
    # branches:
    #   - main
    #   - master
    paths-ignore:
      - .gitignore
      - README.md
      - LICENSE

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  pages: read
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # submodules: true
          # If using the 'assets' git submodule from Chirpy Starter, uncomment above
          # (See: https://github.com/cotes2020/chirpy-starter/tree/main/assets)

      # - name: Setup Pages
      #   id: pages
      #   uses: actions/configure-pages@v1

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1 # reads from a '.ruby-version' or '.tools-version' file if 'ruby-version' is omitted
          bundler-cache: true

      # TODO: Don't duplicate building the site again?

      - name: Build site
        run: |
          pwd
          ls -lah
          bundle exec jekyll b
          ls -lah
          ls -lah _site
        env:
          JEKYLL_ENV: "production"

    #   - name: Upload site artifact
    #     uses: actions/upload-pages-artifact@v1
    #     with:
    #       path: "_site"

  deploy:
    # environment:
    #   name: github-pages
    #   url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to mattpopovich.com
        uses: easingthemes/ssh-deploy@v4.1.8
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.HOSTNAME }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          ARGS: "-ahv --delete --dry-run"
          SOURCE: "_site/"
          TARGET: ${{ secrets.SERVER_DESTINATION }}
          SCRIPT_BEFORE: |
            whoami
            ls -lah
            ls -lah _site
          SCRIPT_AFTER: |
            whoami
            ls -lah
            ls -lah _site
            echo $RSYNC_STDOUT
        # run: |
        #   rsync -ahv --delete --dry-run ${{ steps.pages.outputs.base_path }} ${{ secrets.USERNAME }}@${{ secrets.HOSTNAME }}:${{ secrets.SERVER_DESTINATION}}
